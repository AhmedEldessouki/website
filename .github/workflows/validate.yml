name: validate
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
jobs:
  setup:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [12, 14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: ‚éî Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-

      - name: Install packages & verify Cypress
        run: |
          yarn install --frozen-lockfile
          npx cypress verify
          npx cypress info
          npx cypress version
          npx cypress version --component package
          npx cypress version --component binary
          npx cypress version --component electron
          npx cypress version --component node
        if: steps.cache.outputs.cache-hit != 'true'

      - name: üí° Run lint script
        run: npm run lint:ci

      - name: üõ† Run build script
        run: npm run build

      - name: ‚ö° Run test script
        run: npm run test:ci

      - name: Run Cypress test script
        uses: cypress-io/github-action@v2
        with:
          command: npm run test:e2e
          browser: chrome
          headless: true
          wait-on: 'http://localhost:3000'
